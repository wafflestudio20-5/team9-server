name: "Deploy Dear J"

on:
  push:
    branches:
      - main
      - refac/server
    paths:
      - .github/workflows/deploy.yml
      - dear_j/**
      - image/**
      - nginx/**
      - requirements.txt

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY_INTERFACE: backend/interface
  ECR_REPOSITORY_NGINX: backend/nginx
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    name: Deploy Dear J
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS infra account credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Check tag existence
      id: docker-tag
      run: |
        export TAG_EXIST=$(aws ecr list-images --repository-name ${ECR_REPOSITORY_INTERFACE} | jq 'any(.imageIds[].imageTag; . == "'${IMAGE_TAG}'")')
        echo "is_exist=${TAG_EXIST}" >> $GITHUB_OUTPUT

    - name: Build, tag, and push interface image to Amazon ECR
      id: build-image-interface
      uses: docker/build-push-action@v3
      if: steps.docker-tag.outputs.is_exist == 'false'
      with:
        push: true
        context: ${{ github.workspace }}/${{ env.PROJECT_DIR }}
        file: ${{ github.workspace }}/Dockerfile # image/dear_j/Dockerfile
        platforms: linux/x86_64
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_INTERFACE }}:${{ env.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          AWS_ACCESS_KEY_ID_ARG: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY_ARG: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION_ARG: ${{ env.AWS_REGION }}


    # - name: executing remote ssh commands using password
    #   uses: appleboy/ssh-action@v0.1.6
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     script: |
    #       ${{ github.workspace }}/deploy.sh
